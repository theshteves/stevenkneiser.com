{"version":3,"file":"component---src-pages-blog-jsx-0c82f0c143a983b8084f.js","mappings":"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","sources":["webpack://steven-kneiser/./src/assets/img/exclusive-paper.png","webpack://steven-kneiser/./src/components/preview.jsx","webpack://steven-kneiser/./src/pages/blog.jsx"],"sourcesContent":["export default __webpack_public_path__ + \"static/exclusive-paper-ffa6a31cdcf531560c5622a7e24e783b.png\";","import PropTypes from 'prop-types'\nimport React from 'react'\nimport { Link } from 'gatsby'\n\nimport texture from '../assets/img/exclusive-paper.png'\n\nexport default function Preview({ date, href, title, blurb, source, draft }) {\n  const dayOfYear = date\n    .toLocaleString('en-US', { dateStyle: 'long' })\n    .split(',')[0]\n  const currentYear = new Date().getFullYear()\n  const year = date.getFullYear()\n\n  const tiltStyle = (num) => {\n    if (num % 3 === 0) {\n      return 'transform self-center'\n    }\n    if ((num + 1) % 3 === 0) {\n      return 'transform self-center rotate-2'\n    }\n    return 'transform self-center -rotate-2'\n  }\n\n  const cardType = () => {\n    const classNames = ['my-80', 'postit']\n\n    // Explicitly name TailwindCSS classes, so they don't get stripped from production builds\n    const bgColors = {\n      internal: draft ? 'bg-yellow-100' : 'bg-yellow-300',\n      cwc: draft ? 'bg-green-100' : 'bg-green-300',\n    }\n    classNames.push(bgColors[source])\n\n    return classNames.join(' ')\n  }\n\n  return (\n    <>\n    {source === 'internal' ? (\n      <Link to={href}>\n        <div className={tiltStyle(title.length)}>\n          <div\n            className={cardType()}\n            style={{ backgroundImage: `url(${texture})` }}\n          >\n            <p className='my-1 text-left font-mono transform -rotate-6 italic'>\n              {dayOfYear},{' '}\n              <span\n                className={\n                  year === currentYear\n                    ? ''\n                    : 'inline-block rounded-lg px-1 text-yellow-800 italic'\n                }\n              >\n                {year}\n              </span>\n            </p>\n\n            {draft ? (\n              <p className='mt-4 text-right font-mono'>ðŸ”’ draft in progress</p>\n            ) : null}\n\n                <h2\n                  className={\n                    draft\n                      ? 'text-3xl text-gray-500 mt-4 underline'\n                      : 'text-3xl text-blue-700 mt-8 underline'\n                  }\n                >\n                  {title}\n                </h2>\n\n            <div\n              className='text-left'\n              dangerouslySetInnerHTML={{ __html: blurb }}\n            />\n          </div>\n        </div>\n\n      </Link>\n    ) : (\n      <a href={href}>\n\n        <div className={tiltStyle(title.length)}>\n              <div\n                className={cardType()}\n                style={{ backgroundImage: `url(${texture})` }}\n              >\n                <p className='my-1 text-left font-mono transform -rotate-6 italic'>\n                  {dayOfYear},{' '}\n                  <span\n                    className={\n                      year === currentYear\n                        ? ''\n                        : 'inline-block rounded-lg px-1 text-yellow-800 italic'\n                    }\n                  >\n                    {year}\n                  </span>\n                </p>\n\n                {draft ? (\n                  <p className='mt-4 text-right font-mono'>ðŸ”’ draft in progress</p>\n                ) : null}\n\n                    <h2\n                      className={\n                        draft\n                          ? 'text-3xl text-gray-500 mt-4 underline'\n                          : 'text-3xl text-blue-700 mt-8 underline'\n                      }\n                    >\n                      {title}\n                    </h2>\n\n                <div\n                  className='text-left'\n                  dangerouslySetInnerHTML={{ __html: blurb }}\n                />\n              </div>\n            </div>\n      </a>\n    )}\n    </>\n  )\n}\n\nPreview.propTypes = {\n  date: PropTypes.node.isRequired, // Date object (TODO: simplify)\n  href: PropTypes.string.isRequired,\n  title: PropTypes.string.isRequired,\n  blurb: PropTypes.string.isRequired,\n  source: PropTypes.string.isRequired,\n  draft: PropTypes.bool.isRequired,\n}\n","import PropTypes from 'prop-types'\nimport React from 'react'\nimport { graphql } from 'gatsby'\n\nimport Layout from '../components/layout'\nimport Preview from '../components/preview'\n\nexport const query = graphql`\n  query {\n    allMarkdownRemark(sort: { fields: frontmatter___date, order: DESC }) {\n      nodes {\n        frontmatter {\n          date\n          permalink\n          title\n          draft\n        }\n        excerpt(format: HTML)\n        timeToRead\n      }\n    }\n\n    allCwc(sort: { fields: date, order: DESC }) {\n      nodes {\n        date\n        url\n        title\n        excerpt\n      }\n    }\n  }\n`\n\nexport default function BlogPage({ data }) {\n  // Merge all content, sorted by date\n  const personalBlog = data.allMarkdownRemark.nodes.map((node) => ({\n    date: new Date(`${node.frontmatter.date} 16:00`),\n    href: node.frontmatter.permalink,\n    title: node.frontmatter.title,\n    blurb: node.excerpt,\n    source: 'internal',\n    draft: node.frontmatter.draft,\n  }))\n  const cwcBlog = data.allCwc.nodes.map((node) => ({\n    date: new Date(`${node.date} 16:00`),\n    href: node.url,\n    title: node.title,\n    blurb: `<p>${node.excerpt}</p>`,\n    source: 'cwc',\n    draft: false,\n  }))\n  const previews = personalBlog.concat(cwcBlog).sort((a, b) => b.date - a.date)\n\n  const recentTitles = personalBlog\n    .slice(1, 4) // Get 3  most recent (exluding /now)\n    .map((preview) => ` ${preview.title}`)\n  const meta = {\n    title: 'Blog - Steven Kneiser',\n    description: `The blog of Steven Kneiser:${recentTitles}, & more`,\n  }\n\n  return (\n    <Layout meta={meta}>\n      <h1>Most Recent</h1>\n\n      <div className='mt-16 flex flex-wrap justify-evenly content-around items-center'>\n        {previews.map(({ date, href, title, blurb, source, draft }) => (\n          <Preview\n            key={href}\n            date={date}\n            href={href}\n            title={title}\n            blurb={blurb}\n            source={source}\n            draft={draft}\n          />\n        ))}\n      </div>\n    </Layout>\n  )\n}\n\nBlogPage.propTypes = {\n  data: PropTypes.oneOfType([\n    PropTypes.shape({\n      allMarkdownRemark: PropTypes.shape({\n        nodes: PropTypes.arrayOf([\n          PropTypes.shape({\n            frontmatter: PropTypes.shape({\n              date: PropTypes.string,\n              permalink: PropTypes.string,\n              title: PropTypes.string,\n            }),\n            excerpt: PropTypes.string,\n            timeToRead: PropTypes.number,\n          }),\n        ]),\n      }),\n    }),\n    PropTypes.shape({\n      allCwc: PropTypes.shape({\n        nodes: PropTypes.arrayOf([\n          PropTypes.shape({\n            date: PropTypes.string,\n            url: PropTypes.string,\n            title: PropTypes.string,\n            excerpt: PropTypes.string,\n          }),\n        ]),\n      }),\n    }),\n  ]).isRequired,\n}\n"],"names":["Preview","date","href","title","blurb","source","draft","dayOfYear","toLocaleString","dateStyle","split","currentYear","Date","getFullYear","year","tiltStyle","num","cardType","classNames","bgColors","internal","cwc","push","join","to","className","length","style","backgroundImage","texture","dangerouslySetInnerHTML","__html","BlogPage","data","personalBlog","allMarkdownRemark","nodes","map","node","frontmatter","permalink","excerpt","cwcBlog","allCwc","url","previews","concat","sort","a","b","meta","description","slice","preview","key"],"sourceRoot":""}